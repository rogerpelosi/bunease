{"version":3,"sources":["components/GroupsList.js","components/GroupDetail.js","components/GroupsContainer.js","components/CloudinaryUpload.js","components/EventsList.js","components/EventDetail.js","components/EventsContainer.js","components/Navbar.js","AuthenticatedApp.js","components/Login.js","components/Signup.js","UnauthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["GroupsList","groups","leaveGroup","joinGroup","createGroup","useState","name","setName","location","setLocation","leaveOrJoinButton","group","user_group","className","onClick","id","map","to","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","GroupDetail","groupId","setGroup","fetchGroupCallback","useCallback","fetch","credentials","then","res","json","useEffect","members","member","username","events","event","poster_image_url","src","alt","title","GroupsContainer","setGroups","userGroupId","find","method","ok","updatedGroups","undefined","headers","body","JSON","stringify","group_id","errors","Promise","reject","userGroup","exact","path","formData","concat","render","match","params","CloudinaryUpload","preset","handleUpload","buttonText","generateId","ending","split","w","toLowerCase","join","window","myWidget","cloudinary","createUploadWidget","cloudName","uploadPreset","prepareUploadParams","cb","all","results","length","error","result","console","log","info","close","document","getElementById","addEventListener","open","href","EventsList","removeRsvpToEvent","cancelEvent","rsvpToEvent","createEvent","now","Date","setMinutes","getMinutes","getTimezoneOffset","setTitle","description","setDescription","toISOString","slice","startTime","setStartTime","endTime","setEndTime","groupName","setGroupName","posterUrl","setPosterUrl","rsvpOrCancelButton","user_event","cancelEventButton","user_is_creator","start_time","end_time","group_name","htmlfor","list","posterPreview","secure_url","EventDetail","eventId","setEvent","history","useHistory","fetchEventCallback","handleCancel","push","user_can_modify","creator","time","rsvpButton","attendees","attendee","EventsContainer","setEvents","updatedEvents","filter","event_id","userEvent","Navbar","setCurrentUser","currentUser","handleLogout","navbarOpen","setNavbarOpen","profile_picture_thumbnail_url","profile_picture_url","eager","user","AuthenticatedApp","Login","setUsername","password","setPassword","Signup","passwordConfirmation","setPasswordConfirmation","password_confirmation","UnauthenticatedApp","App","authChecked","setAuthChecked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.19b8680e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction GroupsList({ groups, leaveGroup, joinGroup, createGroup }) {\n  const [name, setName] = useState('')\n  const [location, setLocation] = useState('')\n\n  const leaveOrJoinButton = (group) => {\n    if (group.user_group) {\n      return <button className=\"px-4 py-1 bg-red-400 text-white\" onClick={() => leaveGroup(group.id)}>Leave Group</button>\n    } else {\n      return <button className=\"px-4 py-1 bg-green-500 text-white\" onClick={() => joinGroup(group.id)}>Join Group</button>\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    createGroup({ name, location })\n    setName('')\n    setLocation('')\n  }\n  \n  return (\n    <div>\n      <h1 className=\"text-3xl my-4 font-bold\">Groups</h1>\n      <div className=\"space-y-4 my-4\">\n        {groups.map(group => (\n          <p className=\"flex justify-between items-center\">\n            <Link to={`groups/${group.id}`}>{group.name}</Link> <span>{leaveOrJoinButton(group)}</span>\n          </p>\n        ))}\n      </div>\n      <h3 className=\"text-xl mt-8 font-bold\">Add Group</h3>\n      <form className=\"md:flex md:space-x-2 my-4 items-center\" onSubmit={handleSubmit}>\n        <label className=\"block\" htmlFor=\"name\">Name </label>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          name=\"name\"\n          className=\"md:flex-grow md:inline-block border-b-2 border-black outline-none px-1 w-full md:w-auto\"\n        />\n        <label className=\"block\" htmlFor=\"name\"> Location </label>\n        <input\n          type=\"text\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          name=\"location\"\n          className=\"md:flex-grow md:inline-block border-b-2 border-black outline-none px-1 w-full md:w-auto\"\n        />\n        {\" \"}<button className=\"mt-4 md:mt-0 px-4 py-1 bg-green-500\" type=\"submit\">Add</button>\n      </form>\n    </div>\n  )\n}\n\nexport default GroupsList\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction GroupDetail({ groupId, leaveGroup, joinGroup }) {\n  const [group, setGroup] = useState(null)\n\n  const fetchGroupCallback = useCallback(() => {\n    fetch(`/api/groups/${groupId}`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(group => setGroup(group))\n  }, [groupId])\n  \n  useEffect(() => {\n    fetchGroupCallback()\n  }, [fetchGroupCallback])\n\n  const leaveOrJoinButton = (group) => {\n    if (group.user_group) {\n      return (\n        <button\n          className=\"px-4 py-1 bg-red-400 text-white\" \n          onClick={() => leaveGroup(group.id).then(() => fetchGroupCallback())}\n        >\n          Leave Group\n        </button>\n      )\n    } else {\n      return (\n        <button\n          className=\"px-4 py-1 bg-green-500 text-white\" \n          onClick={() => joinGroup(group.id).then(() => fetchGroupCallback())}\n        >\n          Join Group\n        </button>\n      )\n    }\n  }\n\n  if(!group){ return <div></div>}\n  \n  return (\n    <div>\n      <h1 className=\"font-bold text-3xl\">{group.name}</h1>\n      {leaveOrJoinButton(group)}\n      <h2 className=\"font-bold text-2xl\">Members</h2>\n      <ul>\n        {group.members?.map(member => <li>{member.username}</li>)}\n      </ul>\n      <h2 className=\"font-bold text-2xl\">Events</h2>\n      <ul>\n        {/* {group.events?.map((event) => <li><Link to={`/events/${event.id}`}>{event.title}</Link></li>)} */}\n        {group.events?.map(event => (\n          <li\n            className=\"flex justify-between items-center\">\n            <Link to={`/events/${event.id}`}>\n              {event.poster_image_url && <img src={event.poster_image_url} alt={event.title} className=\"w-28 h-28 object-fill\" />}\n              {event.title}\n            </Link>\n            {/* <span>{rsvpOrCancelButton(event)} {cancelEventButton(event)}</span> */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n  \n}\n\nexport default GroupDetail\n","import React, { useState, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport GroupsList from './GroupsList'\nimport GroupDetail from './GroupDetail'\n\nfunction GroupsContainer() {\n  const [groups, setGroups] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/groups\", {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(groups => setGroups(groups))\n  }, [])\n\n\n  const leaveGroup = (groupId) => {\n    let userGroupId = groups.find(group => group.id === groupId).user_group.id\n    return fetch(`/api/user_groups/${userGroupId}`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          const updatedGroups = groups.map(group => {\n            if (group.id === groupId) {\n              return {\n                ...group,\n                user_group: undefined\n              }\n            } else {\n              return group\n            }\n          })\n          setGroups(updatedGroups)\n        }\n      })\n  }\n\n  const joinGroup = (groupId) => {\n    return fetch('/api/user_groups', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        group_id: groupId\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(userGroup => {\n        const updatedGroups = groups.map(group => {\n          if (group.id === groupId) {\n            return {\n              ...group,\n              user_group: userGroup\n            }\n          } else {\n            return group\n          }\n        })\n        setGroups(updatedGroups)\n      })\n  }\n\n  const createGroup = (formData) => {\n    return fetch(\"/groups\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(group => {\n        setGroups(groups.concat(group))\n      })\n  }\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          exact\n          path=\"/groups\"\n        >\n          <GroupsList\n            groups={groups}\n            leaveGroup={leaveGroup}\n            joinGroup={joinGroup}\n            createGroup={createGroup}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/groups/:id\"\n          render={({ match }) => {\n            return (\n              <GroupDetail\n                groupId={match.params.id}\n                leaveGroup={leaveGroup}\n                joinGroup={joinGroup}\n              />\n            )\n          }}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default GroupsContainer\n","import React, { useEffect } from \"react\";\n\nfunction CloudinaryUpload({\n  preset,\n  handleUpload,\n  buttonText\n}) {\n\n  const generateId = () => {\n    const ending = buttonText.split(' ').map(w => w.toLowerCase()).join('_')\n    return `upload_widget_${ending}`\n  }\n  useEffect(() => {\n    window.myWidget = window.cloudinary.createUploadWidget(\n      {\n        cloudName: \"dpkrqs9rs\",\n        uploadPreset: preset,\n        prepareUploadParams: (cb, params) => {\n          params = [].concat(params);  //params can be a single object or an array of objects\n          Promise.all(params.map((body) => {\n            return fetch(\"/uploads/prepare\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(body)\n            })\n              .then(res => res.json())\n          }))\n            .then((results) =>\n              cb(results.length === 1 ? results[0] : results)\n            );\n        }\n      },\n      (error, result) => {\n        if (!error && result && result.event === \"success\") {\n          console.log(\"Done! Here is the image info: \", result.info);\n          handleUpload && handleUpload(result);\n          window.myWidget.close();\n        }\n      }\n    );\n    document.getElementById(generateId()).addEventListener(\n      \"click\",\n      function () {\n        window.myWidget.open();\n      },\n      false\n    );\n  }, [preset, handleUpload]);\n\n  return (\n    <a href=\"#\" id={generateId()}>\n      {buttonText}\n    </a>\n  );\n}\n\nexport default CloudinaryUpload;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport CloudinaryUpload from './CloudinaryUpload'\n\nfunction EventsList({ events, groups, removeRsvpToEvent, cancelEvent, rsvpToEvent, createEvent }) {\n  const now = new Date();\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [location, setLocation] = useState('')\n  const [startTime, setStartTime] = useState(now.toISOString().slice(0, 16))\n  const [endTime, setEndTime] = useState('')\n  const [groupName, setGroupName] = useState('')\n  const [posterUrl, setPosterUrl] = useState('')\n\n\n\n  const rsvpOrCancelButton = (event) => {\n    if (event.user_event) {\n      return <button className=\"px-4 py-1 bg-red-400 text-white\" onClick={() => removeRsvpToEvent(event.id)}>Cancel RSVP</button>\n    } else {\n      return <button className=\"px-4 py-1 bg-green-500 text-white\" onClick={() => rsvpToEvent(event.id)}>RSVP for event</button>\n    }\n  }\n\n  const cancelEventButton = (event) => {\n    if (event.user_is_creator) {\n      return <button className=\"px-4 py-1 bg-red-400 text-white\" onClick={() => cancelEvent(event.id)}>Cancel Event</button>\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    createEvent({\n      title,\n      description,\n      location,\n      start_time: startTime,\n      end_time: endTime,\n      group_name: groupName,\n      poster_image_url: posterUrl\n    })\n    setTitle('')\n    setDescription('')\n    setLocation('')\n    setStartTime('')\n    setEndTime('')\n    setGroupName('')\n    setPosterUrl('')\n  }\n\n  const handlePosterUpload = (result) => {\n    setPosterUrl(result.info.secure_url)\n  }\n\n  const posterPreview = () => {\n    if (posterUrl) {\n      return (\n        <img\n          src={posterUrl}\n          className=\"w-28 h-28 object-fill\"\n          alt={title}\n        />\n      )\n    }\n  }\n  \n  return (\n    <div>\n      <h1 className=\"text-3xl my-4 font-bold\">Events</h1>\n      <div className=\"space-y-4 my-4\">\n        {events.map(event => (\n          <p\n            className=\"flex justify-between items-center\">\n            <Link to={`events/${event.id}`}>\n              {event.poster_image_url && <img src={event.poster_image_url} alt={event.title} className=\"w-28 h-28 object-fill\" />}\n              {event.title}\n            </Link>\n            <span>{rsvpOrCancelButton(event)} {cancelEventButton(event)}</span>\n          </p>\n        ))}\n      </div>\n      <h3 className=\"text-xl mt-8 font-bold\">Add Event</h3>\n      <form className=\"my-4 space-y-4\" onSubmit={handleSubmit}>\n        <p className=\"flex items-center\">\n          <label className=\"w-28 inline-block\" htmlFor=\"title\">Title </label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            name=\"title\"\n            className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n          />\n        </p>\n        <p className=\"flex items-center\">\n          <label className=\"w-28 inline-block\" htmlFor=\"description\"> Description </label>\n          <textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            name=\"description\"\n            className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n          />\n        </p>\n        <p className=\"flex items-center\">\n          <label className=\"w-28 inline-block\" htmlFor=\"name\"> Location </label>\n          <input\n            type=\"text\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            name=\"location\"\n            className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n          />\n        </p>\n        <p className=\"flex items-center\">\n          <label className=\"w-28 inline-block\" htmlFor=\"start_time\"> Start Time </label>\n          <input\n            type=\"datetime-local\"\n            value={startTime}\n            onChange={(e) => setStartTime(e.target.value)}\n            name=\"start_time\"\n            className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n          />\n        </p>\n        <p className=\"flex items-center\">\n          <label className=\"w-28 inline-block\" htmlFor=\"end_time\"> End Time </label>\n          <input\n            type=\"datetime-local\"\n            value={endTime}\n            onChange={(e) => setEndTime(e.target.value)}\n            name=\"end_time\"\n            className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n          />\n        </p>\n        <p className=\"flex items-center\">\n          <label className=\"w-28 inline-block\" htmlfor=\"group_name\">Group Name </label>\n          <input\n            type=\"text\"\n            name=\"group_name\"\n            value={groupName}\n            list=\"groups\"\n            onChange={(e) => setGroupName(e.target.value)}\n            className=\"flex-grow md:inline-block border-b-2 border-black outline-none px-1 md:ml-2\"\n          />\n          <datalist id=\"groups\">\n            {groups.map(group => <option>{group.name}</option>)}\n          </datalist>\n        </p>\n        <p>\n          {posterPreview()}\n          <CloudinaryUpload\n            preset=\"rrsszoxs\"\n            buttonText=\"Add Event Poster\"\n            handleUpload={handlePosterUpload}\n          />\n        </p>\n        <p>\n          <button className=\"block bg-green-500 w-full py-2 mt-8\" type=\"submit\">Add Event</button>\n        </p>\n      </form>\n    </div>\n  )\n}\n\nexport default EventsList\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nfunction EventDetail({ eventId, removeRsvpToEvent, rsvpToEvent, cancelEvent }) {\n  const [event, setEvent] = useState(null)\n  const history = useHistory();\n\n  const fetchEventCallback = useCallback(\n    () => {\n      fetch(`/api/events/${eventId}`, {\n        credentials: 'include'\n      })\n        .then(res => res.json())\n        .then(event => setEvent(event))\n    },\n    [eventId],\n  )\n\n  useEffect(() => {\n    fetchEventCallback()\n  }, [fetchEventCallback])\n\n\n  const cancelEventButton = (event) => {\n    if (event.user_can_modify) {\n      return (\n        <p>\n          <button\n            className=\"px-4 py-1 bg-red-400 text-white\" \n            onClick={handleCancel}\n          >\n            Cancel Event\n          </button>\n        </p>\n      )\n    }\n  }\n\n  const handleCancel = (e) => {\n    cancelEvent(event.id);\n    history.push('/events')\n  }\n\n  const rsvpButton = (event) => {\n    if (event.user_event) {\n      return (\n        <button\n          className=\"px-4 py-1 bg-red-400 text-white\"\n          onClick={() => {\n            removeRsvpToEvent(event.id).then(() => fetchEventCallback())\n          }\n        }>\n          Cancel RSVP\n        </button >\n      )\n    } else {\n      return (\n        <button\n          className=\"px-4 py-1 bg-green-500 text-white\" \n          onClick={() => {\n            rsvpToEvent(event.id).then(() => fetchEventCallback())\n          }\n        }>\n          RSVP for event\n        </button>\n      )\n    }\n  }\n  \n  if(!event) { return <div></div>}\n  return (\n    <div>\n      <h1 className=\"font-bold text-3xl\">{event.title}</h1>\n      {event.poster_image_url && (<img src={event.poster_image_url} alt={event.title} className=\"my-4\" />)}\n      {cancelEventButton(event)}\n      <small>Created by {event.creator} for <Link to={`/groups/${event.group.id}`}>{event.group.name}</Link></small>\n      <p>{event.description}</p>\n      <p>{event.time}</p>\n      <p>Location: {event.location}</p>\n      <p>{rsvpButton(event)}</p>\n      <ul>\n        {event.attendees.map(attendee => (\n          <li>{attendee.username}</li>\n        ))}\n      </ul>\n\n\n    </div>\n  )\n}\n\nexport default EventDetail\n","import React, { useState, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport EventsList from './EventsList'\nimport EventDetail from './EventDetail'\n\nfunction EventsContainer() {\n  const [events, setEvents] = useState([])\n  const [groups, setGroups] = useState([])\n  \n  useEffect(() => {\n    fetch(`/api/events`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(events => setEvents(events))\n    fetch(`/api/groups`, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(groups => setGroups(groups))\n  },[])\n\n  const removeRsvpToEvent = (eventId) => {\n    const event = events.find(event => event.id === eventId)\n    return fetch(`/api/user_events/${event.user_event.id}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          // if the event is the one we just removed an rsvp \n          // for, set its user_event property in state to \n          // undefined; If not, leave the event as it is\n          const updatedEvents = events.map((event) => {\n            if (event.id === eventId) {\n              return {\n                ...event,\n                user_event: undefined\n              }\n            } else {\n              return event\n            }\n          })\n          setEvents(updatedEvents)\n        }\n      })\n  }\n\n  const cancelEvent = (eventId) => {\n    return fetch(`/api/events/${eventId}`, {\n      method: \"DELETE\",\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          const updatedEvents = events.filter(event => event.id !== eventId)\n          setEvents(updatedEvents)\n        }\n      })\n  }\n  const rsvpToEvent = (eventId) => {\n    return fetch('/api/user_events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        event_id: eventId\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(userEvent => {\n        // if the event is the one we just rsvp'd to\n        // add a user_event property in state and set\n        // it to the userEvent; if not, leave it as is\n        const updatedEvents = events.map((event) => {\n          if (event.id === eventId) {\n            return {\n              ...event,\n              user_event: userEvent\n            }\n          } else {\n            return event\n          }\n        })\n        setEvents(updatedEvents)\n      })\n  }\n\n  const createEvent = (formData) => {\n    return fetch(\"/events\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json().then(errors => Promise.reject(errors))\n        }\n      })\n      .then(event => {\n        setEvents(events.concat(event))\n      })\n  }\n\n  return (\n    <div>\n      <Switch>\n        <Route\n          exact\n          path=\"/events\"\n        >\n          <EventsList\n            events={events}\n            groups={groups}\n            cancelEvent={cancelEvent}\n            removeRsvpToEvent={removeRsvpToEvent}\n            rsvpToEvent={rsvpToEvent}\n            createEvent={createEvent}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/events/:id\"\n          render={({ match }) => {\n            return <EventDetail\n              eventId={match.params.id}\n              cancelEvent={cancelEvent}\n              removeRsvpToEvent={removeRsvpToEvent}\n              rsvpToEvent={rsvpToEvent}\n            />\n          }}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default EventsContainer\n","import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport CloudinaryUpload from './CloudinaryUpload'\n\nfunction Navbar({setCurrentUser, currentUser, handleLogout}) {\n\n  const [navbarOpen, setNavbarOpen] = useState(false)\n\n  const handleUpload = (result) => {\n    const body = {\n      profile_picture_url: result.info.secure_url,\n      profile_picture_thumbnail_url: result.info.eager[0].secure_url\n    }\n    fetch('/api/me', {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(user => {\n        console.log(user);\n        setCurrentUser(user)\n      })\n  }\n  const profilePic = () => {\n    if (currentUser.profile_picture_thumbnail_url) {\n      return (\n        <img\n          src={currentUser.profile_picture_thumbnail_url}\n          alt={currentUser.username}\n          className=\"rounded-full ml-auto\"\n        />\n      )\n    } else {\n      return `Logged in as ${currentUser.username}`\n    }\n    \n  }\n\n  return (\n    <nav className=\"flex items-center justify-between text-2xl border-black border-b-2 pb-2 mb-4\">\n      <div className=\"\">\n        <NavLink className=\"pr-6 py-6\" to=\"/groups\">Groups</NavLink>\n        <NavLink className=\"pr-2 py-6\" to=\"/events\">Events</NavLink>\n      </div>\n      <div className=\"flex flex-col\">\n        <button className=\"text-right\" onClick={() => setNavbarOpen(!navbarOpen)}>\n          {profilePic()}\n        </button>\n        <div className=\"relative w-52\">\n          <div className={`flex flex-col w-52 bg-white shadow overflow-hidden absolute space-y-3 text-lg ${navbarOpen ? 'p-4 max-h-screen' : 'p-0 max-h-0'}`}>\n            <CloudinaryUpload\n              preset=\"sxyvnfnd\"\n              buttonText=\"Add Profile Picture\"\n              handleUpload={handleUpload}\n            />\n            <hr/>\n            <button onClick={handleLogout}>Logout</button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import './App.css';\nimport GroupsContainer from './components/GroupsContainer'\nimport EventsContainer from './components/EventsContainer'\nimport Navbar from './components/Navbar'\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom'\n\nfunction AuthenticatedApp({ currentUser, setCurrentUser }) {\n  const history = useHistory()\n  \n  const handleLogout = () => {\n    fetch(`/api/logout`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          setCurrentUser(null)\n          history.push('/')\n        }\n      })\n  }\n\n  return (\n    <div className=\"App max-w-5xl\">\n      <Navbar\n        setCurrentUser={setCurrentUser}\n        currentUser={currentUser}\n        handleLogout={handleLogout}\n      />\n      <Switch>\n        <Route path=\"/groups\">\n          <GroupsContainer />\n        </Route>\n        <Route path=\"/events\">\n          <EventsContainer />\n        </Route>\n        <Redirect to=\"/groups\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default AuthenticatedApp;\n","import React, { useState } from 'react'\nimport { Redirect, useHistory, Link } from 'react-router-dom'\n\nfunction Login({ setCurrentUser }) {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({username, password})\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(user => {\n            setCurrentUser(user)\n            history.push('/groups')\n          })\n        } else {\n          res.json().then(errors => {\n            console.error(errors)\n          })\n        }\n      })\n  }\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <Redirect to=\"/\" />\n      <form className=\"w-2/3 bg-white p-8 max-w-md space-y-4\" onSubmit={handleSubmit}>\n        <h1 className=\"text-2xl text-center font-bold mb-2\">Log In</h1>\n        <p>\n          <label \n            className=\"block text-lg font-semibold\"\n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"w-full p-2 border\"\n          />\n        </p>\n        <p>\n          <label \n            className=\"block text-lg font-semibold\"\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"w-full p-2 border\"\n          />\n        </p>\n        <p><button className=\"w-full bg-green-500 py-2 mt-4\" type=\"submit\">Log In</button></p>\n        <p className=\"text-center\">-- or --</p>\n        <p className=\"text-center\"><Link className=\"py-4 px-6\" to=\"/signup\">Sign Up</Link></p>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n\nfunction Signup({ setCurrentUser }) {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n    fetch('/api/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(user => {\n            setCurrentUser(user)\n            history.push('/groups')\n          })\n        } else {\n          res.json().then(errors => {\n            console.error(errors)\n          })\n        }\n      })\n  }\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <form className=\"w-2/3 bg-white p-8 max-w-md space-y-4\" onSubmit={handleSubmit}>\n        <h1 className=\"text-2xl text-center font-bold mb-2\">Sign Up</h1>\n        <p>\n          <label\n            className=\"block text-lg font-semibold\"\n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"w-full p-2 border\"\n          />\n        </p>\n        <p>\n          <label\n            className=\"block text-lg font-semibold\"\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"w-full p-2 border\"\n          />\n        </p>\n        <p>\n          <label \n            htmlFor=\"password_confirmation\"\n            className=\"block text-lg font-semibold\"\n          >\n            Password Confirmation\n          </label>\n          <input\n            type=\"password\"\n            name=\"password_confirmation\"\n            value={passwordConfirmation}\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\n            className=\"w-full p-2 border\"\n          />\n        </p>\n        <p><button className=\"w-full bg-green-500 py-2 mt-4\" type=\"submit\">Sign Up</button></p>\n        <p className=\"text-center\">-- or --</p>\n        <p className=\"text-center\"><Link className=\"py-4 px-6\" to=\"/login\">Log In</Link></p>\n      </form>\n    </div>\n  )\n}\n\nexport default Signup\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\n\nfunction UnauthenticatedApp({ setCurrentUser }) {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Login setCurrentUser={setCurrentUser} />\n      </Route>\n      <Route exact path=\"/signup\">\n        <Signup setCurrentUser={setCurrentUser}/>\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  )\n}\n\nexport default UnauthenticatedApp\n","import React, { useState, useEffect } from 'react'\nimport AuthenticatedApp from './AuthenticatedApp'\nimport UnauthenticatedApp from './UnauthenticatedApp'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [authChecked, setAuthChecked] = useState(false)\n\n  useEffect(() => {\n    fetch('/api/me', {\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then((user) => {\n            setCurrentUser(user)\n            setAuthChecked(true)\n          })\n        } else {\n          setAuthChecked(true)\n        }\n      })\n  }, [])\n\n  if(!authChecked) { return <div></div>}\n  return (\n    <Router>\n      {currentUser ? (\n          <AuthenticatedApp\n            setCurrentUser={setCurrentUser}\n            currentUser={currentUser}\n          />\n        ) : (\n          <UnauthenticatedApp\n            setCurrentUser={setCurrentUser}\n          />\n        )\n      }\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}